"""команда .join - разделяет список на отдельные элементы с разделителем
 пример:  l = ['a','b','c']
    ','.join(l) будет a,b,c"""
-----------------------------------------------------------------------------------------------------------------------
""" команда split() выполняет разделение по пробелу
пример: l = 'Я учу пайтон
l.split() будет ['Я', 'учу', 'пайтон']'"""
------------------------------------------------------------------------------------------------------------------------
"""Функция len() возвращает длину (количество элементов) в объекте.
пример:  mylist = ['apple', 'banana', 'cherry']
>>> len(mylist) будет 3"""
------------------------------------------------------------------------------------------------------------------------
"""Для обработки исключений используется конструкция try - except. В блоке try мы выполняем инструкцию, которая может
 породить исключение, а в блоке except мы перехватываем их.
 пример:
     try:
        return WebDriverWait(browser, time).until(wait_type((By.CSS_SELECTOR, selector)))
    except TimeoutException:
        raise AssertionError(f'Явное ожидание не сработало')"""
------------------------------------------------------------------------------------------------------------------------
Цикл for в языке программирования Python предназначен для перебора элементов структур данных и некоторых других объектов
пример:
>>> spisok = [10, 40, 20, 30]
>>> for element in spisok:
...     print(element + 2)
...
12
42
22
32
------------------------------------------------------------------------------------------------------------------------
функция range() генерирует последовательность чисел в указанном диапазоне. Так, range(5, 11) сгенерирует
последовательность 5, 6, 7, 8, 9, 10. Однако это будет не структура данных типа "список".
пример: range(3) == [0, 1, 2].
------------------------------------------------------------------------------------------------------------------------
Методы append и extend производят добавление в конец списка. Разница между ними заключается в том, что с помощью append
можно добавить только один элемент, в то время extend позволяет расширить список сразу на несколько
пример:
>>> lst = ['a', 45, 89, 'who']
>>> lst.append(67)
>>> lst
['a', 45, 89, 'who', 67]
>>> b
[1, 2, 3]
>>> c = (9, 10)
>>> b.extend(c)
>>> b
[1, 2, 3, 9, 10]
------------------------------------------------------------------------------------------------------------------------
del - Инструкция удаляет переменные, элементы, ключи, срезы и атрибуты.
пример:
my_list = [123, 'spam', 1.23, 'NI']
del my_list[2]
my_list  # [123, 'spam', 'NI']

list_one = ['spam', 1, 11, 111]
list_two = [2, 22, 'spam', 222]
list_three = [3, 'spam', 33, 333]
del list_one[0], list_two[2], list_three[1]
------------------------------------------------------------------------------------------------------------------------
Функция isinstance() вернет True, если проверяемый объект object является экземпляром указанного класса (классов) или
его подкласса (прямого, косвенного или виртуального).
пример:
    def add_area(self, figure):
        if not isinstance(figure, Figure):
            raise ValueError("transferred is not a geometric figure")
        return self.area + figure.area
-----------------------------------------------------------------------------------------------------------------------